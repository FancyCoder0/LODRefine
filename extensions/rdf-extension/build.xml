<?xml version="1.0" encoding="UTF-8"?>

<!--+
    |
    |  Google Refine Extension RDF Exporter Build File    
    |                
    +-->
    
<project name="rdf-extension" default="build" basedir=".">

    <property environment="env"/>

    <condition property="version" value="0.8.1">
        <not><isset property="version"/></not>
    </condition>

    <condition property="revision" value="rXXXX">
        <not><isset property="revision"/></not>
    </condition>

    <condition property="full_version" value="0.0.0.0">
        <not><isset property="full_version"/></not>
    </condition>

    <condition property="dist.dir" value="dist">
        <not><isset property="dist.dir"/></not>
    </condition>

    <property name="name" value="rdf-extension" />
    <property name="fullname" value="${name}-${version}" />
    
    <property name="refine.dir" value="${basedir}/../../main" />
    <property name="refine.webinf.dir" value="${refine.dir}/webapp/WEB-INF" />
    <property name="refine.modinf.dir" value="${refine.dir}/webapp/modules/core/MOD-INF" />
    <property name="refine.classes.dir" value="${refine.webinf.dir}/classes" />
    <property name="refine.lib.dir" value="${refine.webinf.dir}/lib" />
    <property name="server.dir" value="${basedir}/../../server" />
    <property name="server.lib.dir" value="${server.dir}/lib" />
    
    <property name="src.dir" value="${basedir}/src" />
    <property name="rsrc.dir" value="${basedir}/resources" />
    <property name="module.dir" value="${basedir}/module" />
    <property name="modinf.dir" value="${module.dir}/MOD-INF" />
    <property name="lib.dir" value="${modinf.dir}/lib" />
    <property name="classes.dir" value="${modinf.dir}/classes" />
    <property name="dist-ext.dir" value="${basedir}/dist" />


    <path id="class.path">
        <fileset dir="${lib.dir}" erroronmissingdir="false">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${refine.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${server.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement path="${refine.classes.dir}"/>
    </path>
            
    <target name="build_java" depends="copyfiles,copyresources">
        <mkdir dir="${classes.dir}" />
        <javac source="${java_version}" target="${java_version}" bootclasspath="${java.bootclass.path}" destdir="${classes.dir}" debug="true" includeAntRuntime="no">
            <src path="${src.dir}"/>
            <src path="${rsrc.dir}"/>
            <classpath refid="class.path" />
        </javac>
    </target>

    <target name="build" depends="build_java"/>
	

    <target name="dist" depends="build">
        <mkdir dir="${dist-ext.dir}"/>
        <mkdir dir="${dist-ext.dir}/${name}"/>
        <copy todir="${dist-ext.dir}/${name}/module">
            <fileset dir="${module.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>
        <zip destfile="${dist-ext.dir}/${fullname}.zip" basedir="${dist-ext.dir}/${name}/.." includes="*/**"/>
    </target>

    <target name="dist-clean">
        <delete dir="${dist-ext.dir}" />
    </target>


    <target name="copyfiles">
    <copy todir="${classes.dir}">
            <fileset dir="${rsrc.dir}">
               <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="copyresources">
	<copy todir="${classes.dir}">
           <fileset dir="${src.dir}">
               <include name="**/*.tsv"/>
             </fileset>
         </copy>
	</target>

    <target name="clean">
        <delete dir="${classes.dir}" />
    </target>

</project>

